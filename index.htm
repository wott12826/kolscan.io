<!DOCTYPE html>
<html lang="en" data-theme="dark">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="icon" type="image/png" href="images/xitadel_logo.png">
    <title>Xitadel - Track Top Memecoin Traders</title>
    <meta name="description" content="Track the top memecoin traders in real-time. Never miss a trade again.">
    <style>
        :root {
            --primary: #0066CC;
            --primary-light: #1E88E5;
            --primary-dark: #004BA0;
            --primary-lighter: #42A5F5;
            --white: #FFFFFF;
            --bg-dark: #0A0A0A;
            --spacing-xs: 0.5rem;
            --spacing-sm: 1rem;
            --spacing-md: 1.5rem;
            --spacing-lg: 2rem;
            --spacing-xl: 3rem;
            --radius-sm: 0.5rem;
            --radius-md: 1rem;
            --radius-lg: 1.5rem;
            --radius-full: 9999px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--primary);
            color: var(--white);
            line-height: 1.5;
        }

        .glass-effect {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .btn {
            background: var(--white);
            color: var(--primary);
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: var(--radius-full);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .btn:hover {
            transform: scale(1.05);
            background: var(--primary-light);
            color: var(--white);
        }

        .btn-secondary {
            background: transparent;
            border: 2px solid var(--white);
            color: var(--white);
        }

        .btn-secondary:hover {
            background: var(--white);
            color: var(--primary);
        }

        .header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 100;
            padding: var(--spacing-md) var(--spacing-xl);
        }

        .header-content {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            align-items: center;
            gap: var(--spacing-xl);
        }

        .logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--white);
            text-decoration: none;
        }

        .nav-links {
            display: flex;
            gap: var(--spacing-md);
        }

        .nav-link {
            color: var(--white);
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: var(--radius-full);
            transition: all 0.2s ease;
        }

        .nav-link:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: scale(1.05);
        }

        .header-actions {
            margin-left: auto;
            display: flex;
            gap: var(--spacing-md);
        }

        .main-content {
            max-width: 1200px;
            margin: 120px auto 0;
            padding: var(--spacing-xl);
        }

        .hero {
            text-align: center;
            margin-bottom: var(--spacing-xl);
        }

        .hero-title {
            font-size: 4rem;
            line-height: 1.2;
            margin-bottom: var(--spacing-xl);
            font-weight: 700;
        }

        .hero-title .highlight {
            text-decoration: underline;
            text-decoration-thickness: 3px;
            text-underline-offset: 8px;
        }

        .hero-subtitle {
            font-size: 1.25rem;
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: var(--spacing-xl);
        }

        .cta-container {
            display: flex;
            gap: var(--spacing-md);
            justify-content: center;
            margin-bottom: var(--spacing-xl);
        }

        .search-container {
            max-width: 600px;
            margin: 0 auto;
        }

        .search-wrapper {
            display: flex;
            gap: var(--spacing-xs);
            padding: var(--spacing-xs);
            background: rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-full);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .search-input {
            flex: 1;
            min-width: 0;
            background: transparent;
            border: none;
            color: var(--white);
            padding: 0.75rem 1rem;
            font-size: 1rem;
            font-weight: 500;
        }

        .search-input::placeholder {
            color: rgba(255, 255, 255, 0.8);
            font-weight: 400;
        }

        .search-input:focus {
            outline: none;
            color: var(--white);
        }

        .search-btn {
            padding: 0.75rem;
            border-radius: var(--radius-full);
        }

        .trades-list {
            display: flex;
            flex-direction: column;
            gap: var(--spacing-md);
            margin-top: var(--spacing-xl);
        }

        .trade-card {
            display: flex;
            align-items: center;
            gap: var(--spacing-md);
            padding: var(--spacing-md);
            background: rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-lg);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.2s ease;
            cursor: pointer;
        }

        .trade-card:hover {
            transform: scale(1.02);
            background: rgba(30, 136, 229, 0.15);
            border-color: rgba(30, 136, 229, 0.3);
        }

        .trade-card.new-trade {
            animation: pulse 0.5s ease-in-out;
        }

        @keyframes pulse {
            0% {
                transform: scale(1);
                background: rgba(30, 136, 229, 0.2);
            }
            50% {
                transform: scale(1.02);
                background: rgba(30, 136, 229, 0.3);
            }
            100% {
                transform: scale(1);
                background: rgba(255, 255, 255, 0.1);
            }
        }

        .trader-avatar {
            width: 40px;
            height: 40px;
            border-radius: var(--radius-full);
        }

        .trade-action.buy {
            color: #00FF88;
        }

        .trade-action.sell {
            color: #FF4444;
        }

        .tokenomics {
            margin-top: var(--spacing-xl);
            padding: var(--spacing-xl);
            background: rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-lg);
        }

        .tokenomics-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: var(--spacing-md);
            margin-top: var(--spacing-md);
        }

        .tokenomics-card {
            padding: var(--spacing-md);
            background: rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-md);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .social-links {
            display: flex;
            justify-content: center;
            gap: var(--spacing-md);
            margin-top: var(--spacing-xl);
        }

        .faq {
            margin-top: var(--spacing-xl);
            max-width: 800px;
            margin-left: auto;
            margin-right: auto;
        }

        .faq-item {
            margin-bottom: var(--spacing-md);
            background: rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-md);
            overflow: hidden;
        }

        .faq-question {
            padding: var(--spacing-md);
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-weight: 600;
        }

        .faq-answer {
            padding: 0 var(--spacing-md);
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease-out;
        }

        .faq-answer.active {
            padding: var(--spacing-md);
            max-height: 500px;
        }

        .footer {
            margin-top: var(--spacing-xl);
            padding: var(--spacing-xl);
            text-align: center;
            background: rgba(255, 255, 255, 0.1);
        }

        .footer-links {
            margin-top: var(--spacing-md);
        }

        .footer-links a {
            color: var(--white);
            text-decoration: none;
            margin: 0 var(--spacing-sm);
        }

        .footer-links a:hover {
            text-decoration: underline;
        }

        @media (max-width: 768px) {
            .btn{
                padding: 0.75rem 0.75rem!important;
                font-weight: 200px !important;
            }
            .header-content {
                flex-wrap: wrap;
            }
            .main-content {
                margin-top: 40%;
            }
            .nav-links {
                order: 3;
                width: 100%;
                justify-content: center;
                margin-top: var(--spacing-md);
            }

            .hero-title {
                font-size: 2.5rem;
            }

            .cta-container {
                flex-direction: column;
            }

            .tokenomics-grid {
                grid-template-columns: 1fr;
            }

            .social-links {
                flex-direction: column;
                align-items: center;
            }
        }

        .connect-wallet.connected {
            background: var(--primary-light);
            color: var(--white);
            cursor: pointer;
            opacity: 0.85;
        }

        .connect-wallet.connected:hover {
            filter: brightness(0.95);
            opacity: 1;
        }
    </style>
</head>

<body>
    <div class="layoutContainer">
        <header class="header glass-effect">
            <div class="header-content">
                <a href="index.htm" class="logo">
                    <img src="images/xitadel_logo.png" alt="Xitadel Logo" style="height: 50px; width: auto;">
                </a>
                
                <nav class="nav-links">
                    <a href="trades.html" class="nav-link">Trades</a>
                    <a href="tokens.html" class="nav-link">Tokens</a>
                    <a href="leaderboard.html" class="nav-link">Leaderboard</a>
                </nav>

                <div class="header-actions">
                    <button class="btn connect-wallet">
                        Connect Wallet
                    </button>
                </div>
            </div>
        </header>

        <main class="main-content">
            <section class="hero">
                <h1 class="hero-title">
                    Track the Top Memecoin <br>
                    Traders in <span class="highlight">Realtime</span>
                </h1>
                
                <p class="hero-subtitle">
                    Never miss a trade again. Follow the smartest traders in the space.
                </p>

                <div class="search-container">
                    <div class="search-wrapper">
                        <input type="text" class="search-input" placeholder="Enter wallet address" id="wallet-search">
                        <button class="btn search-btn" onclick="searchWallet()">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        </button>
                    </div>
                </div>

                <div class="trades-list">
                    <div class="trade-card" id="latest-trade-card">
                        <div class="trade-header">
                            <img src="" alt="trader" class="trader-avatar">
                            <span class="trader-name" id="latest-trader">Loading...</span>
                        </div>
                        <div class="trade-details">
                            <span class="trade-action" id="latest-action">loading</span>
                            <span class="trade-amount" id="latest-amount">loading</span>
                            <span class="trade-token" id="latest-token">loading</span>
                            <span class="trade-price" id="latest-price">loading</span>
                        </div>
                        <div class="trade-time">
                            <a href="trades.html" class="time-link" id="latest-time">loading</a>
                        </div>
                    </div>
                </div>

                <div class="cta-container">
                    <button class="btn" onclick="window.location.href='trades.html'" style="margin-top: 2%;">Monitor Trades from Top Wallets</button>
                    <button class="btn" onclick="window.location.href='tokens.html'" style="margin-top: 2%;">Discover New and Trending Tokens</button>
                    <button class="btn" onclick="window.location.href='leaderboard.html'" style="margin-top: 2%;">Analyze the Most Profitable Wallets</button>
                </div>

                <div class="tokenomics">
                    <h2 class="section-title">Tokenomics</h2>
                    <div class="tokenomics-grid">
                        <div class="tokenomics-card">
                            <h3>Public</h3>
                            <ul>
                                <li>Realtime Trades</li>
                                <li>Wallet holdings & Token PnL</li>
                                <li>Realized PnL Leaderboard</li>
                            </ul>
                        </div>
                        <div class="tokenomics-card">
                            <h3>Tier 1 (100k+)</h3>
                            <ul>
                                <li>Realtime Token Tracker</li>
                            </ul>
                        </div>
                        <div class="tokenomics-card">
                            <h3>Tier 2 (420k+)</h3>
                            <ul>
                                <li>Coming Soon...</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="social-links">
                    <a href="https://x.com/ScanXitadel" class="btn">Follow us on X</a>
                    <a href="https://t.me/ScanXitadel" class="btn">Join the Telegram</a>
                    <a href="https://swap.pump.fun/?input=So11111111111111111111111111111111111111112&output=qZNiALxuoDzBYA5UYFH5QuPFwFJF1NVQtd17o4wpump" class="btn">Buy $XITADEL</a>
                </div>

                <div class="faq">
                    <h2 class="section-title">FAQ</h2>
                    <div class="faq-item">
                        <div class="faq-question">
                            What is Xitadel?
                            <span class="toggle">+</span>
                        </div>
                        <div class="faq-answer">
                            XITADEL is a Solana wallet tracker that monitors the activities of top memecoin traders and KOLs. It provides realtime transactions, token PnL, and a leaderboard ranking their performance.
                        </div>
                    </div>
                    <div class="faq-item">
                        <div class="faq-question">
                            Is Xitadel free to use?
                            <span class="toggle">+</span>
                        </div>
                        <div class="faq-answer">
                            XITADEL offers both free and premium features. While realtime trades are available for free, realtime token tracking is only available to wallets holding more than 100k XITADEL tokens.
                        </div>
                    </div>
                    <div class="faq-item">
                        <div class="faq-question">
                            Can I track non-Xitadel wallets?
                            <span class="toggle">+</span>
                        </div>
                        <div class="faq-answer">
                            Yes, you can search any wallet address on XITADEL . However, its data is initially limited to the last 100 transactions unless you choose to load more.
                        </div>
                    </div>
                    <div class="faq-item">
                        <div class="faq-question">
                            How do I get my wallet on the leaderboard?
                            <span class="toggle">+</span>
                        </div>
                        <div class="faq-answer">
                            We are looking for the top trenchers! If you have $100k+ PnL in recent months, DM us your wallet for verification on X @TRY_XITADEL.
                        </div>
                    </div>
                </div>
            </section>
        </main>

        <footer class="footer">
            <p>© 2025 Xitadel. All rights reserved.</p>
            <div class="footer-links">
                
            </div>
        </footer>
    </div>

    <script>
        // FAQ Accordion
        document.querySelectorAll('.faq-question').forEach(question => {
            question.addEventListener('click', () => {
                const answer = question.nextElementSibling;
                const toggle = question.querySelector('.toggle');
                
                answer.classList.toggle('active');
                toggle.textContent = answer.classList.contains('active') ? '-' : '+';
            });
        });

        let lastTradeSignature = null;
        let lastUpdateTime = 0;

        function updateLatestTrade() {
            const latestTrade = JSON.parse(localStorage.getItem('latestTrade'));
            if (!latestTrade) return;

            // Check if this is a new trade by comparing signatures
            if (lastTradeSignature !== latestTrade.signature) {
                const tradeCard = document.getElementById('latest-trade-card');
                
                // Add animation class
                tradeCard.classList.add('new-trade');
                
                // Update all trade information
                document.getElementById('latest-trader').textContent = latestTrade.wallet.slice(0, 4) + '...' + latestTrade.wallet.slice(-4);
                document.getElementById('latest-action').textContent = latestTrade.type === 'buy' ? 'bought' : 'sold';
                document.getElementById('latest-action').className = 'trade-action ' + latestTrade.type;
                document.getElementById('latest-amount').textContent = `${latestTrade.amount} sol`;
                document.getElementById('latest-token').textContent = latestTrade.tokenSymbol;
                document.getElementById('latest-price').textContent = `$${latestTrade.price.toFixed(6)}`;
                document.getElementById('latest-time').textContent = 'just now';
                
                // Remove animation class after animation completes
                setTimeout(() => {
                    tradeCard.classList.remove('new-trade');
                }, 500);

                // Update last trade signature
                lastTradeSignature = latestTrade.signature;
                lastUpdateTime = Date.now();
            } else {
                // Only update the time for existing trade
                const timeElement = document.getElementById('latest-time');
                if (timeElement) {
                    timeElement.textContent = timeAgo(latestTrade.timestamp);
                }
            }
        }

        function timeAgo(timestamp) {
            const seconds = Math.floor((Date.now() / 1000) - timestamp);
            
            if (seconds < 5) {
                return 'just now';
            }
            
            if (seconds < 60) {
                return `${seconds}s ago`;
            }
            
            const minutes = Math.floor(seconds / 60);
            if (minutes < 60) {
                return `${minutes}m ago`;
            }
            
            const hours = Math.floor(minutes / 60);
            if (hours < 24) {
                return `${hours}h ago`;
            }
            
            const days = Math.floor(hours / 24);
            if (days < 30) {
                return `${days}d ago`;
            }
            
            const months = Math.floor(days / 30);
            if (months < 12) {
                return `${months}mo ago`;
            }
            
            const years = Math.floor(months / 12);
            return `${years}y ago`;
        }

        // Initial update
        updateLatestTrade();

        // Check for new trades every second
        setInterval(() => {
            updateLatestTrade();
        }, 1000);

        // Add wallet search functionality
        function searchWallet() {
            const walletAddress = document.getElementById('wallet-search').value.trim();
            if (walletAddress) {
                window.open(`https://solscan.io/tx/${walletAddress}`, '_blank');
            }
        }

        // Add enter key support
        document.getElementById('wallet-search').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                searchWallet();
            }
        });

        async function connectPhantomWallet() {
            if (!window.solana || !window.solana.isPhantom) {
                alert('Phantom Wallet not found! Please install the Phantom extension.');
                window.open('https://phantom.app/', '_blank');
                return;
            }
            try {
                const resp = await window.solana.connect();
                const pubkey = resp.publicKey.toString();
                localStorage.setItem('phantomWallet', pubkey);
                updateWalletButton(pubkey);
                if (typeof checkXitadelAccess === 'function') checkXitadelAccess(pubkey);
            } catch (err) {
                console.log('Wallet connection cancelled', err);
            }
        }
        function updateWalletButton(pubkey) {
            const btns = document.querySelectorAll('.connect-wallet');
            btns.forEach(btn => {
                if (pubkey) {
                    btn.textContent = pubkey.slice(0, 4) + '...' + pubkey.slice(-4);
                    btn.disabled = false;
                    btn.classList.add('connected');
                    btn.onclick = logoutPhantomWallet;
                    btn.title = 'Disconnect';
                } else {
                    btn.textContent = 'Connect Wallet';
                    btn.disabled = false;
                    btn.classList.remove('connected');
                    btn.onclick = connectPhantomWallet;
                    btn.title = '';
                }
            });
        }
        function logoutPhantomWallet() {
            localStorage.removeItem('phantomWallet');
            updateWalletButton(null);
            const modal = document.querySelector('.access-modal');
            if (modal) modal.style.display = 'flex';
        }
        document.addEventListener('DOMContentLoaded', () => {
            const btns = document.querySelectorAll('.connect-wallet');
            btns.forEach(btn => {
                btn.onclick = connectPhantomWallet;
            });
            const pubkey = localStorage.getItem('phantomWallet');
            if (pubkey) updateWalletButton(pubkey);
        });
    </script>
</body>

</html>
